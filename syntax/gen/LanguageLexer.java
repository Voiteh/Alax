// Generated from D:/git/Alax/syntax/src/main/antlr4/language\LanguageLexer.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LanguageLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		THIS=1, SUPER=2, OUTER=3, BOOLEAN_LITERAL=4, STRING_LITERAL=5, CHARACTER_LITERAL=6, 
		FLOAT_LITERAL=7, INTEGER_LITERAL=8, DECLARATION_NAME=9, VALUE_TYPE_NAME=10, 
		WS=11;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TRUE", "FALSE", "QUOTE", "APOSTROPHE", "DOT", "SEMI_COLON", "COLON", 
			"COMMA", "OPEN_CURLY", "CLOSE_CURLY", "OPEN_SQUARE", "CLOSE_SQUARE", 
			"OPEN_TRIANGLE", "CLOSE_TRIANGLE", "OPEN_BRACKET", "CLOSE_BRACKET", "MINUS", 
			"PLUS", "AND", "PIPE", "UNDERSCORE", "CHARACTER", "DIGITS", "DIGIT", 
			"UPPERCASE_LETTER", "LOWERCASE_LETTER", "THIS", "SUPER", "OUTER", "BOOLEAN_LITERAL", 
			"STRING_LITERAL", "CHARACTER_LITERAL", "FLOAT_LITERAL", "INTEGER_LITERAL", 
			"DECLARATION_NAME", "VALUE_TYPE_NAME", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'this'", "'super'", "'outer'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "THIS", "SUPER", "OUTER", "BOOLEAN_LITERAL", "STRING_LITERAL", 
			"CHARACTER_LITERAL", "FLOAT_LITERAL", "INTEGER_LITERAL", "DECLARATION_NAME", 
			"VALUE_TYPE_NAME", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LanguageLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LanguageLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u000b\u00d6\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!"+
		"\u0007!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001"+
		"\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013"+
		"\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0003\u0015\u0081\b\u0015\u0001\u0016\u0004\u0016\u0084\b\u0016\u000b"+
		"\u0016\f\u0016\u0085\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0003\u001d\u00a1\b\u001d\u0001\u001e\u0001"+
		"\u001e\u0005\u001e\u00a5\b\u001e\n\u001e\f\u001e\u00a8\t\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0003"+
		" \u00b1\b \u0001 \u0001 \u0001 \u0001 \u0001!\u0003!\u00b8\b!\u0001!\u0001"+
		"!\u0001\"\u0001\"\u0001\"\u0001\"\u0001\"\u0005\"\u00c1\b\"\n\"\f\"\u00c4"+
		"\t\"\u0001#\u0001#\u0001#\u0001#\u0001#\u0005#\u00cb\b#\n#\f#\u00ce\t"+
		"#\u0001$\u0004$\u00d1\b$\u000b$\f$\u00d2\u0001$\u0001$\u0000\u0000%\u0001"+
		"\u0000\u0003\u0000\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000\r\u0000"+
		"\u000f\u0000\u0011\u0000\u0013\u0000\u0015\u0000\u0017\u0000\u0019\u0000"+
		"\u001b\u0000\u001d\u0000\u001f\u0000!\u0000#\u0000%\u0000\'\u0000)\u0000"+
		"+\u0000-\u0000/\u00001\u00003\u00005\u00017\u00029\u0003;\u0004=\u0005"+
		"?\u0006A\u0007C\bE\tG\nI\u000b\u0001\u0000\u0004\u0001\u000009\u0001\u0000"+
		"AZ\u0001\u0000az\u0003\u0000\t\n\r\r  \u00cc\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000"+
		"\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000"+
		"I\u0001\u0000\u0000\u0000\u0001K\u0001\u0000\u0000\u0000\u0003P\u0001"+
		"\u0000\u0000\u0000\u0005V\u0001\u0000\u0000\u0000\u0007X\u0001\u0000\u0000"+
		"\u0000\tZ\u0001\u0000\u0000\u0000\u000b\\\u0001\u0000\u0000\u0000\r^\u0001"+
		"\u0000\u0000\u0000\u000f`\u0001\u0000\u0000\u0000\u0011b\u0001\u0000\u0000"+
		"\u0000\u0013d\u0001\u0000\u0000\u0000\u0015f\u0001\u0000\u0000\u0000\u0017"+
		"h\u0001\u0000\u0000\u0000\u0019j\u0001\u0000\u0000\u0000\u001bl\u0001"+
		"\u0000\u0000\u0000\u001dn\u0001\u0000\u0000\u0000\u001fp\u0001\u0000\u0000"+
		"\u0000!r\u0001\u0000\u0000\u0000#t\u0001\u0000\u0000\u0000%v\u0001\u0000"+
		"\u0000\u0000\'x\u0001\u0000\u0000\u0000)z\u0001\u0000\u0000\u0000+\u0080"+
		"\u0001\u0000\u0000\u0000-\u0083\u0001\u0000\u0000\u0000/\u0087\u0001\u0000"+
		"\u0000\u00001\u0089\u0001\u0000\u0000\u00003\u008b\u0001\u0000\u0000\u0000"+
		"5\u008d\u0001\u0000\u0000\u00007\u0092\u0001\u0000\u0000\u00009\u0098"+
		"\u0001\u0000\u0000\u0000;\u00a0\u0001\u0000\u0000\u0000=\u00a2\u0001\u0000"+
		"\u0000\u0000?\u00ab\u0001\u0000\u0000\u0000A\u00b0\u0001\u0000\u0000\u0000"+
		"C\u00b7\u0001\u0000\u0000\u0000E\u00bb\u0001\u0000\u0000\u0000G\u00c5"+
		"\u0001\u0000\u0000\u0000I\u00d0\u0001\u0000\u0000\u0000KL\u0005t\u0000"+
		"\u0000LM\u0005r\u0000\u0000MN\u0005u\u0000\u0000NO\u0005e\u0000\u0000"+
		"O\u0002\u0001\u0000\u0000\u0000PQ\u0005f\u0000\u0000QR\u0005a\u0000\u0000"+
		"RS\u0005l\u0000\u0000ST\u0005s\u0000\u0000TU\u0005e\u0000\u0000U\u0004"+
		"\u0001\u0000\u0000\u0000VW\u0005\"\u0000\u0000W\u0006\u0001\u0000\u0000"+
		"\u0000XY\u0005\'\u0000\u0000Y\b\u0001\u0000\u0000\u0000Z[\u0005.\u0000"+
		"\u0000[\n\u0001\u0000\u0000\u0000\\]\u0005;\u0000\u0000]\f\u0001\u0000"+
		"\u0000\u0000^_\u0005:\u0000\u0000_\u000e\u0001\u0000\u0000\u0000`a\u0005"+
		",\u0000\u0000a\u0010\u0001\u0000\u0000\u0000bc\u0005{\u0000\u0000c\u0012"+
		"\u0001\u0000\u0000\u0000de\u0005}\u0000\u0000e\u0014\u0001\u0000\u0000"+
		"\u0000fg\u0005[\u0000\u0000g\u0016\u0001\u0000\u0000\u0000hi\u0005]\u0000"+
		"\u0000i\u0018\u0001\u0000\u0000\u0000jk\u0005<\u0000\u0000k\u001a\u0001"+
		"\u0000\u0000\u0000lm\u0005>\u0000\u0000m\u001c\u0001\u0000\u0000\u0000"+
		"no\u0005(\u0000\u0000o\u001e\u0001\u0000\u0000\u0000pq\u0005)\u0000\u0000"+
		"q \u0001\u0000\u0000\u0000rs\u0005-\u0000\u0000s\"\u0001\u0000\u0000\u0000"+
		"tu\u0005+\u0000\u0000u$\u0001\u0000\u0000\u0000vw\u0005&\u0000\u0000w"+
		"&\u0001\u0000\u0000\u0000xy\u0005|\u0000\u0000y(\u0001\u0000\u0000\u0000"+
		"z{\u0005_\u0000\u0000{*\u0001\u0000\u0000\u0000|\u0081\u00033\u0019\u0000"+
		"}\u0081\u00031\u0018\u0000~\u0081\u0003/\u0017\u0000\u007f\u0081\u0003"+
		")\u0014\u0000\u0080|\u0001\u0000\u0000\u0000\u0080}\u0001\u0000\u0000"+
		"\u0000\u0080~\u0001\u0000\u0000\u0000\u0080\u007f\u0001\u0000\u0000\u0000"+
		"\u0081,\u0001\u0000\u0000\u0000\u0082\u0084\u0003/\u0017\u0000\u0083\u0082"+
		"\u0001\u0000\u0000\u0000\u0084\u0085\u0001\u0000\u0000\u0000\u0085\u0083"+
		"\u0001\u0000\u0000\u0000\u0085\u0086\u0001\u0000\u0000\u0000\u0086.\u0001"+
		"\u0000\u0000\u0000\u0087\u0088\u0007\u0000\u0000\u0000\u00880\u0001\u0000"+
		"\u0000\u0000\u0089\u008a\u0007\u0001\u0000\u0000\u008a2\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0007\u0002\u0000\u0000\u008c4\u0001\u0000\u0000\u0000"+
		"\u008d\u008e\u0005t\u0000\u0000\u008e\u008f\u0005h\u0000\u0000\u008f\u0090"+
		"\u0005i\u0000\u0000\u0090\u0091\u0005s\u0000\u0000\u00916\u0001\u0000"+
		"\u0000\u0000\u0092\u0093\u0005s\u0000\u0000\u0093\u0094\u0005u\u0000\u0000"+
		"\u0094\u0095\u0005p\u0000\u0000\u0095\u0096\u0005e\u0000\u0000\u0096\u0097"+
		"\u0005r\u0000\u0000\u00978\u0001\u0000\u0000\u0000\u0098\u0099\u0005o"+
		"\u0000\u0000\u0099\u009a\u0005u\u0000\u0000\u009a\u009b\u0005t\u0000\u0000"+
		"\u009b\u009c\u0005e\u0000\u0000\u009c\u009d\u0005r\u0000\u0000\u009d:"+
		"\u0001\u0000\u0000\u0000\u009e\u00a1\u0003\u0001\u0000\u0000\u009f\u00a1"+
		"\u0003\u0003\u0001\u0000\u00a0\u009e\u0001\u0000\u0000\u0000\u00a0\u009f"+
		"\u0001\u0000\u0000\u0000\u00a1<\u0001\u0000\u0000\u0000\u00a2\u00a6\u0003"+
		"\u0005\u0002\u0000\u00a3\u00a5\u0003+\u0015\u0000\u00a4\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a5\u00a8\u0001\u0000\u0000\u0000\u00a6\u00a4\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000\u0000\u00a7\u00a9\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000\u0000\u00a9\u00aa\u0003\u0005"+
		"\u0002\u0000\u00aa>\u0001\u0000\u0000\u0000\u00ab\u00ac\u0003\u0007\u0003"+
		"\u0000\u00ac\u00ad\u0003+\u0015\u0000\u00ad\u00ae\u0003\u0007\u0003\u0000"+
		"\u00ae@\u0001\u0000\u0000\u0000\u00af\u00b1\u0003!\u0010\u0000\u00b0\u00af"+
		"\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1\u00b2"+
		"\u0001\u0000\u0000\u0000\u00b2\u00b3\u0003-\u0016\u0000\u00b3\u00b4\u0003"+
		"\t\u0004\u0000\u00b4\u00b5\u0003-\u0016\u0000\u00b5B\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b8\u0003!\u0010\u0000\u00b7\u00b6\u0001\u0000\u0000\u0000"+
		"\u00b7\u00b8\u0001\u0000\u0000\u0000\u00b8\u00b9\u0001\u0000\u0000\u0000"+
		"\u00b9\u00ba\u0003-\u0016\u0000\u00baD\u0001\u0000\u0000\u0000\u00bb\u00c2"+
		"\u00033\u0019\u0000\u00bc\u00c1\u00033\u0019\u0000\u00bd\u00c1\u00031"+
		"\u0018\u0000\u00be\u00c1\u0003/\u0017\u0000\u00bf\u00c1\u0003)\u0014\u0000"+
		"\u00c0\u00bc\u0001\u0000\u0000\u0000\u00c0\u00bd\u0001\u0000\u0000\u0000"+
		"\u00c0\u00be\u0001\u0000\u0000\u0000\u00c0\u00bf\u0001\u0000\u0000\u0000"+
		"\u00c1\u00c4\u0001\u0000\u0000\u0000\u00c2\u00c0\u0001\u0000\u0000\u0000"+
		"\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3F\u0001\u0000\u0000\u0000\u00c4"+
		"\u00c2\u0001\u0000\u0000\u0000\u00c5\u00cc\u00031\u0018\u0000\u00c6\u00cb"+
		"\u00033\u0019\u0000\u00c7\u00cb\u00031\u0018\u0000\u00c8\u00cb\u0003/"+
		"\u0017\u0000\u00c9\u00cb\u0003)\u0014\u0000\u00ca\u00c6\u0001\u0000\u0000"+
		"\u0000\u00ca\u00c7\u0001\u0000\u0000\u0000\u00ca\u00c8\u0001\u0000\u0000"+
		"\u0000\u00ca\u00c9\u0001\u0000\u0000\u0000\u00cb\u00ce\u0001\u0000\u0000"+
		"\u0000\u00cc\u00ca\u0001\u0000\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000"+
		"\u0000\u00cdH\u0001\u0000\u0000\u0000\u00ce\u00cc\u0001\u0000\u0000\u0000"+
		"\u00cf\u00d1\u0007\u0003\u0000\u0000\u00d0\u00cf\u0001\u0000\u0000\u0000"+
		"\u00d1\u00d2\u0001\u0000\u0000\u0000\u00d2\u00d0\u0001\u0000\u0000\u0000"+
		"\u00d2\u00d3\u0001\u0000\u0000\u0000\u00d3\u00d4\u0001\u0000\u0000\u0000"+
		"\u00d4\u00d5\u0006$\u0000\u0000\u00d5J\u0001\u0000\u0000\u0000\f\u0000"+
		"\u0080\u0085\u00a0\u00a6\u00b0\u00b7\u00c0\u00c2\u00ca\u00cc\u00d2\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}